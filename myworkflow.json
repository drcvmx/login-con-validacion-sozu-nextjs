{
  "nodes": [
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"error\": \"El formato del email no es válido.\"\n}",
        "options": {}
      },
      "id": "b70a4fed-4856-4402-8f04-dd06a788e158",
      "name": "Respond with Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -144,
        288
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "edafc79d-f6fe-4c42-b1e0-baffed085b17",
      "name": "Respond to Webhook2",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        784,
        32
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "loginconvalidacion",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "e0ee27e4-6144-4cd1-892e-d57d89f2b259",
      "name": "loginconvalidacion",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -528,
        176
      ],
      "webhookId": "2e8015ce-f57c-4350-a59c-5a8903e90faf"
    },
    {
      "parameters": {
        "content": "## Login \n**Usa Json** \nBackend que se encarga de mandar json al frontend"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -512,
        -32
      ],
      "typeVersion": 1,
      "id": "5c95b1f1-bbbd-484f-80f0-9c561c4a6e9f",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT json_build_object(\n\t'usuario', json_build_object(\n\t\t'email', u.email,\n\t\t'nombre', u.nombre,\n\t\t'telefono', u.telefono,\n\t\t'clave_pais_telefono', u.clave_pais_telefono,\n\t\t'activo', u.activo,\n\t\t'rol', json_build_object(\n\t\t\t'id', r.id,\n\t\t\t'nombre', r.nombre,\n\t\t\t'descripcion', r.descripcion,\n\t\t\t'activo', r.activo,\n\t\t\t'menus', (\n\t\t\t\tSELECT json_agg(\n\t\t\t\t\tjson_build_object(\n\t\t\t\t\t\t'id', m.id,\n\t\t\t\t\t\t'nombre', m.nombre,\n\t\t\t\t\t\t'activo', m.activo,\n\t\t\t\t\t\t'submenus', (\n\t\t\t\t\t\t\tSELECT json_agg(\n\t\t\t\t\t\t\t\tjson_build_object(\n\t\t\t\t\t\t\t\t\t'id', sm.id,\n\t\t\t\t\t\t\t\t\t'nombre', sm.nombre,\n\t\t\t\t\t\t\t\t\t'activo', sm.activo,\n\t\t\t\t\t\t\t\t\t'permisos', (\n\t\t\t\t\t\t\t\t\t\tSELECT json_agg(\n\t\t\t\t\t\t\t\t\t\t\tjson_build_object(\n\t\t\t\t\t\t\t\t\t\t\t\t'id', p.id,\n\t\t\t\t\t\t\t\t\t\t\t\t'nombre', p.nombre,\n\t\t\t\t\t\t\t\t\t\t\t\t'descripcion', p.descripcion,\n\t\t\t\t\t\t\t\t\t\t\t\t'activo', p.activo\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\tFROM sozu_admin.submenus_permisos sp\n\t\t\t\t\t\t\t\t\t\tJOIN sozu_admin.permisos p ON sp.permiso_id = p.id\n\t\t\t\t\t\t\t\t\t\tWHERE sp.submenu_id = sm.id AND sp.activo = true\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tFROM sozu_admin.submenus sm\n\t\t\t\t\t\t\tJOIN sozu_admin.menus_roles mr ON mr.menu_id = sm.menu_id AND mr.rol_id = r.id\n\t\t\t\t\t\t\tWHERE sm.menu_id = m.id AND sm.activo = true\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\tFROM sozu_admin.menus m\n\t\t\t\tJOIN sozu_admin.menus_roles mr2 ON mr2.menu_id = m.id AND mr2.rol_id = r.id\n\t\t\t\tWHERE m.activo = true\n\t\t\t)\n\t\t)\n\t)\n) AS resultado_json\nFROM sozu_admin.usuarios u\nJOIN sozu_admin.roles r ON u.rol_id = r.id\nWHERE u.email ILIKE '{{ $json.email }}';",
        "options": {}
      },
      "id": "db34ee83-a3e6-4f27-99c4-fc854359973f",
      "name": "Crear Json",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        240,
        32
      ],
      "credentials": {
        "postgres": {
          "id": "hs7t4F7uM3F2JGat",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  COALESCE(\n    (SELECT\n      json_agg(json_build_object('email', email))\n    FROM\n      sozu_admin.usuarios\n    WHERE\n      email ILIKE '{{ $json.body.email }}'\n    ), '[]'::json\n  ) AS resultado_json;",
        "options": {}
      },
      "id": "7f6d2fa1-9cc7-4df9-8831-cd5d908ef7d2",
      "name": "Email en base de datos",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -128,
        32
      ],
      "credentials": {
        "postgres": {
          "id": "hs7t4F7uM3F2JGat",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const queryResult = $('Email en base de datos').item.json.resultado_json;\nif (queryResult.length > 0) {\n  // Si el array tiene elementos (es decir, el correo existe)\n  return queryResult;\n} else {\n  // Si el array está vacío (el correo no existe)\n  return [\n    {\n      json: {\n        \"error\": \"El correo no está registrado\"\n      }\n    }\n  ];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        64,
        32
      ],
      "id": "7af72b12-d0c7-4764-a9a3-4f9b445f44e2",
      "name": "Esta registrado"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "1d8b63e1-382a-4363-9524-7ec5f0f353a9",
              "leftValue": "={{ $json.count }}",
              "rightValue": "0",
              "operator": {
                "type": "number",
                "operation": "greater"
              },
              "type": "main"
            },
            {
              "id": "09db3d4d-1b29-4bc3-84a5-ea208959b159",
              "leftValue": "={{ $json.body.email }}",
              "rightValue": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "or"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "15c1e73b-ea1c-481c-91aa-8b3127b8770d",
      "name": "email valido",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        -352,
        176
      ]
    },
    {
      "parameters": {
        "jsCode": "// Combinar datos del usuario con proyectos y propiedades\nconst userData = $('Crear Json').item.json.resultado_json;\nconst projectsData = $('Obtener Proyectos/Propiedades').item.json.proyectos_info;\n\n// Agregar proyectos Y propiedades al objeto usuario\nconst completeUserData = {\n  ...userData,\n  usuario: {\n    ...userData.usuario,\n    proyectos_acceso: projectsData.proyectos_acceso,\n    propiedades_disponibles: projectsData.propiedades_disponibles\n  }\n};\n\nreturn [{ json: completeUserData }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        608,
        32
      ],
      "id": "6a2ba901-a863-44f9-9e84-c4643390d50f",
      "name": "Json con Proyectos/Propiedades"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Verificar si el usuario tiene permisos al menú 'Propiedades'\nWITH usuario_tiene_permisos AS (\n    SELECT COUNT(*) > 0 as tiene_acceso\n    FROM sozu_admin.usuarios u\n    JOIN sozu_admin.roles r ON u.rol_id = r.id\n    JOIN sozu_admin.menus_roles mr ON r.id = mr.rol_id\n    JOIN sozu_admin.menus m ON mr.menu_id = m.id\n    WHERE u.email = '{{ $json.resultado_json.usuario.email }}'\n      AND m.nombre = 'Propiedades'\n      AND u.activo = true AND r.activo = true AND mr.activo = true AND m.activo = true\n)\nSELECT json_build_object(\n    'proyectos_acceso', CASE \n        WHEN (SELECT tiene_acceso FROM usuario_tiene_permisos) THEN\n            COALESCE(\n                (SELECT json_agg(\n                    json_build_object(\n                        'proyecto_id', p.id,\n                        'nombre', p.nombre,\n                        'direccion', p.direccion,\n                        'descripcion', p.descripcion,\n                        'latitud', p.latitud,\n                        'longitud', p.longitud,\n                        'url_logo', p.url_logo,\n                        'tipo_uso', tu.nombre,\n                        'fecha_inicio_construccion', p.fecha_inicio_construccion,\n                        'precio_m2_actual', p.precio_m2_actual,\n                        'activo', p.activo,\n                        'edificios_count', (\n                            SELECT COUNT(*) \n                            FROM sozu_admin.edificios e \n                            WHERE e.id_proyecto = p.id AND e.activo = true\n                        ),\n                        'amenidades_count', (\n                            SELECT COUNT(*) \n                            FROM sozu_admin.amenidades a \n                            WHERE a.id_proyecto = p.id AND a.activo = true\n                        )\n                    )\n                )\n                FROM sozu_admin.proyectos_acceso pa\n                INNER JOIN sozu_admin.proyectos p ON pa.proyecto_id = p.id\n                INNER JOIN sozu_admin.tipos_uso tu ON p.id_tipo_uso = tu.id\n                WHERE pa.usuario_id = '{{ $json.resultado_json.usuario.email }}'\n                  AND pa.activo = true\n                  AND p.activo = true\n                ), '[]'::json\n            )\n        ELSE '[]'::json\n    END,\n    'propiedades_disponibles', CASE \n        WHEN (SELECT tiene_acceso FROM usuario_tiene_permisos) THEN\n            COALESCE(\n                (SELECT json_agg(\n                    json_build_object(\n                        'modelo_id', m.id,\n                        'modelo_nombre', m.nombre,\n                        'descripcion', m.descripcion,\n                        'recamaras', m.numero_recamaras,\n                        'banos_completos', m.numero_completo_banos,\n                        'medio_banos', m.numero_medio_bano,\n                        'proyecto_id', p.id,\n                        'proyecto_nombre', p.nombre,\n                        'edificio_id', e.id,\n                        'edificio_nombre', e.nombre,\n                        'edificio_pisos', e.numero_pisos,\n                        'caracteristicas', (\n                            SELECT json_agg(c.nombre)\n                            FROM sozu_admin.modelos_caracteristicas mc\n                            JOIN sozu_admin.caracteristicas c ON mc.id_caracteristica = c.id\n                            WHERE mc.id_modelo = m.id AND mc.activo = true\n                        ),\n                        'multimedias', (\n                            SELECT json_agg(\n                                json_build_object(\n                                    'es_imagen', mm.es_imagen,\n                                    'url', mm.url\n                                )\n                            )\n                            FROM sozu_admin.multimedias_modelo mm\n                            WHERE mm.id_modelo = m.id AND mm.activo = true\n                        )\n                    )\n                )\n                FROM sozu_admin.proyectos_acceso pa\n                INNER JOIN sozu_admin.proyectos p ON pa.proyecto_id = p.id\n                INNER JOIN sozu_admin.edificios e ON p.id = e.id_proyecto\n                INNER JOIN sozu_admin.edificios_modelos em ON e.id = em.id_edificio\n                INNER JOIN sozu_admin.modelos m ON em.id_modelo = m.id\n                WHERE pa.usuario_id = '{{ $json.resultado_json.usuario.email }}'\n                  AND pa.activo = true\n                  AND p.activo = true\n                  AND e.activo = true\n                  AND em.activo = true\n                  AND m.activo = true\n                ), '[]'::json\n            )\n        ELSE '[]'::json\n    END\n) AS proyectos_info;\n\n\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        416,
        32
      ],
      "id": "903087be-2b03-4845-bb8c-1000acc7b882",
      "name": "Obtener Proyectos/Propiedades",
      "credentials": {
        "postgres": {
          "id": "hs7t4F7uM3F2JGat",
          "name": "Postgres account 2"
        }
      }
    }
  ],
  "connections": {
    "Respond to Webhook2": {
      "main": [
        []
      ]
    },
    "loginconvalidacion": {
      "main": [
        [
          {
            "node": "email valido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crear Json": {
      "main": [
        [
          {
            "node": "Obtener Proyectos/Propiedades",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email en base de datos": {
      "main": [
        [
          {
            "node": "Esta registrado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Esta registrado": {
      "main": [
        [
          {
            "node": "Crear Json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "email valido": {
      "main": [
        [
          {
            "node": "Email en base de datos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond with Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Json con Proyectos/Propiedades": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Proyectos/Propiedades": {
      "main": [
        [
          {
            "node": "Json con Proyectos/Propiedades",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ac9469524657dd0d86c98cc6c3f6d79b9ab95b76b3147445ac2a61508925fe0e"
  }
}